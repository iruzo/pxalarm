#!/bin/sh

### BEGIN INIT INFO
# Provides:          pxalarm
# Required-Start:    $local_fs $remote_fs $network $time
# Required-Stop:     $local_fs $remote_fs $network
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: pxalarm daemon
# Description:       pxalarm daemon reads $XDG_CONFIG_HOME/pxalarm/config
### END INIT INFO

POSIXLY_CORRECT=1
export POSIXLY_CORRECT

config_dir="${XDG_CONFIG_HOME:-$HOME/.config}/pxalarm"
config_path="$config_dir/config"
daemonize=0

while getopts s:dh opt 2>/dev/null; do
  case "$opt" in
    s)
      config_path=$OPTARG
      ;;
    d)
      daemonize=1
      ;;
    h)
      echo "\
Usage: $0 [-dh]

POSIX sh simple alarm

-d  Daemonize and run in the background
-h  Print this help text" >&2
      exit 0
      ;;
    ?)
      echo "Usage: $0 [-dh]" >&2
      exit 1
      ;;
  esac
done

if [ ! -f "$config_path" ]; then
  echo "No config file found, writing a sample configuration to $config_path" >&2
  mkdir -p "$config_dir"
  cat <<EOF >"$config_path"
# The alarm format and a few samples are shown below. Any of the date and time
# components may be replaced by a wildcard "*".
# [YYYY-MM-DD HH:MM] <shell command>
# [*-01-* 00:00] notify-send "Happy New Year!"
# [*-*-* 12:00] notify-send "Time for lunch!"
EOF
fi

if [ "$daemonize" -eq 1 ]; then
  nohup "$0" >/dev/null 2>&1 &
  echo "Alarm daemon started"
  exit 0
fi

while true; do
  sleep $((60 - $(date +%S)))

  while read -r line; do
    # Continue if line is a comment (starts with a #)
    [ "${line%%#*}" ] || continue

    # Validate syntax
    # The date format must be correct to avoid problems using it as a glob
    if echo "$line" | grep -Evq '^\[([0-9]{4}|\*)(-([0-9]{2}|\*)){2} ([0-9]{2}|\*):([0-9]{2}|\*)\]'; then
      echo "Invalid alarm: '$line'" >&2
      continue
    fi

    # Check if current date matches the pattern
    case "[$(date '+%Y-%m-%d %H:%M')" in
      ${line%%]*})
        nohup sh -c "${line#*]}" >/dev/null 2>&1 &
        ;;
    esac
  done <"$config_path"
done
